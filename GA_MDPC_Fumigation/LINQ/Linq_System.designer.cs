#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GA_MDPC_Fumigation.LINQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GA_MDPC_FUMIGATION")]
	public partial class Linq_SystemDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSys_Log(Sys_Log instance);
    partial void UpdateSys_Log(Sys_Log instance);
    partial void DeleteSys_Log(Sys_Log instance);
    partial void InsertSys_Log_Item(Sys_Log_Item instance);
    partial void UpdateSys_Log_Item(Sys_Log_Item instance);
    partial void DeleteSys_Log_Item(Sys_Log_Item instance);
    partial void InsertSYS_License(SYS_License instance);
    partial void UpdateSYS_License(SYS_License instance);
    partial void DeleteSYS_License(SYS_License instance);
    partial void InsertSys_BackgroundTask(Sys_BackgroundTask instance);
    partial void UpdateSys_BackgroundTask(Sys_BackgroundTask instance);
    partial void DeleteSys_BackgroundTask(Sys_BackgroundTask instance);
    partial void InsertSys_ProgarmAccept(Sys_ProgarmAccept instance);
    partial void UpdateSys_ProgarmAccept(Sys_ProgarmAccept instance);
    partial void DeleteSys_ProgarmAccept(Sys_ProgarmAccept instance);
    partial void InsertSys_RunningNo(Sys_RunningNo instance);
    partial void UpdateSys_RunningNo(Sys_RunningNo instance);
    partial void DeleteSys_RunningNo(Sys_RunningNo instance);
    #endregion
		
		public Linq_SystemDataContext() : 
				base(global::GA_MDPC_Fumigation.Properties.Settings.Default.GA_MDPC_FUMIGATIONConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_SystemDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_SystemDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_SystemDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Linq_SystemDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SysUser> SysUsers
		{
			get
			{
				return this.GetTable<SysUser>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Log> Sys_Logs
		{
			get
			{
				return this.GetTable<Sys_Log>();
			}
		}
		
		public System.Data.Linq.Table<Sys_Log_Item> Sys_Log_Items
		{
			get
			{
				return this.GetTable<Sys_Log_Item>();
			}
		}
		
		public System.Data.Linq.Table<SYS_License> SYS_Licenses
		{
			get
			{
				return this.GetTable<SYS_License>();
			}
		}
		
		public System.Data.Linq.Table<Sys_BackgroundTask> Sys_BackgroundTasks
		{
			get
			{
				return this.GetTable<Sys_BackgroundTask>();
			}
		}
		
		public System.Data.Linq.Table<Sys_ProgarmAccept> Sys_ProgarmAccepts
		{
			get
			{
				return this.GetTable<Sys_ProgarmAccept>();
			}
		}
		
		public System.Data.Linq.Table<Sys_RunningNo> Sys_RunningNos
		{
			get
			{
				return this.GetTable<Sys_RunningNo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysUser")]
	public partial class SysUser
	{
		
		private string _UserID;
		
		private string _UserCode;
		
		private string _UserName;
		
		private System.DateTime _LastLogin;
		
		private string _Password;
		
		private string _PasswordPharse;
		
		private string _Note;
		
		private string _UserType;
		
		private string _UserStatus;
		
		private System.Nullable<bool> _AllowBlock;
		
		private System.Nullable<bool> _EnableTouch;
		
		private string _UserLevel;
		
		private System.DateTime _CreatedOn;
		
		private string _CreatedBy;
		
		private System.DateTime _ModifiedOn;
		
		private string _ModifiedBy;
		
		private bool _Active;
		
		private string _LastAction;
		
		public SysUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this._UserID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this._UserCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogin", DbType="DateTime NOT NULL")]
		public System.DateTime LastLogin
		{
			get
			{
				return this._LastLogin;
			}
			set
			{
				if ((this._LastLogin != value))
				{
					this._LastLogin = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordPharse", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PasswordPharse
		{
			get
			{
				return this._PasswordPharse;
			}
			set
			{
				if ((this._PasswordPharse != value))
				{
					this._PasswordPharse = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(50)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this._Note = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="NVarChar(50)")]
		public string UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this._UserType = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserStatus", DbType="NVarChar(50)")]
		public string UserStatus
		{
			get
			{
				return this._UserStatus;
			}
			set
			{
				if ((this._UserStatus != value))
				{
					this._UserStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllowBlock", DbType="Bit")]
		public System.Nullable<bool> AllowBlock
		{
			get
			{
				return this._AllowBlock;
			}
			set
			{
				if ((this._AllowBlock != value))
				{
					this._AllowBlock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableTouch", DbType="Bit")]
		public System.Nullable<bool> EnableTouch
		{
			get
			{
				return this._EnableTouch;
			}
			set
			{
				if ((this._EnableTouch != value))
				{
					this._EnableTouch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLevel", DbType="NVarChar(50)")]
		public string UserLevel
		{
			get
			{
				return this._UserLevel;
			}
			set
			{
				if ((this._UserLevel != value))
				{
					this._UserLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this._CreatedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this._CreatedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this._ModifiedOn = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this._ModifiedBy = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAction", DbType="NVarChar(50)")]
		public string LastAction
		{
			get
			{
				return this._LastAction;
			}
			set
			{
				if ((this._LastAction != value))
				{
					this._LastAction = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Log")]
	public partial class Sys_Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SystemLogID;
		
		private string _RecordID;
		
		private System.DateTime _LogDateTime;
		
		private string _LogBy;
		
		private string _Remark;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemLogIDChanging(string value);
    partial void OnSystemLogIDChanged();
    partial void OnRecordIDChanging(string value);
    partial void OnRecordIDChanged();
    partial void OnLogDateTimeChanging(System.DateTime value);
    partial void OnLogDateTimeChanged();
    partial void OnLogByChanging(string value);
    partial void OnLogByChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
		
		public Sys_Log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemLogID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SystemLogID
		{
			get
			{
				return this._SystemLogID;
			}
			set
			{
				if ((this._SystemLogID != value))
				{
					this.OnSystemLogIDChanging(value);
					this.SendPropertyChanging();
					this._SystemLogID = value;
					this.SendPropertyChanged("SystemLogID");
					this.OnSystemLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RecordID
		{
			get
			{
				return this._RecordID;
			}
			set
			{
				if ((this._RecordID != value))
				{
					this.OnRecordIDChanging(value);
					this.SendPropertyChanging();
					this._RecordID = value;
					this.SendPropertyChanged("RecordID");
					this.OnRecordIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDateTime", DbType="DateTime NOT NULL")]
		public System.DateTime LogDateTime
		{
			get
			{
				return this._LogDateTime;
			}
			set
			{
				if ((this._LogDateTime != value))
				{
					this.OnLogDateTimeChanging(value);
					this.SendPropertyChanging();
					this._LogDateTime = value;
					this.SendPropertyChanged("LogDateTime");
					this.OnLogDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogBy", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string LogBy
		{
			get
			{
				return this._LogBy;
			}
			set
			{
				if ((this._LogBy != value))
				{
					this.OnLogByChanging(value);
					this.SendPropertyChanging();
					this._LogBy = value;
					this.SendPropertyChanged("LogBy");
					this.OnLogByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_Log_Item")]
	public partial class Sys_Log_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SystemLogItemID;
		
		private string _SystemLogID;
		
		private string _FieldName;
		
		private string _OldValue;
		
		private string _NewValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSystemLogItemIDChanging(string value);
    partial void OnSystemLogItemIDChanged();
    partial void OnSystemLogIDChanging(string value);
    partial void OnSystemLogIDChanged();
    partial void OnFieldNameChanging(string value);
    partial void OnFieldNameChanged();
    partial void OnOldValueChanging(string value);
    partial void OnOldValueChanged();
    partial void OnNewValueChanging(string value);
    partial void OnNewValueChanged();
    #endregion
		
		public Sys_Log_Item()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemLogItemID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SystemLogItemID
		{
			get
			{
				return this._SystemLogItemID;
			}
			set
			{
				if ((this._SystemLogItemID != value))
				{
					this.OnSystemLogItemIDChanging(value);
					this.SendPropertyChanging();
					this._SystemLogItemID = value;
					this.SendPropertyChanged("SystemLogItemID");
					this.OnSystemLogItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemLogID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SystemLogID
		{
			get
			{
				return this._SystemLogID;
			}
			set
			{
				if ((this._SystemLogID != value))
				{
					this.OnSystemLogIDChanging(value);
					this.SendPropertyChanging();
					this._SystemLogID = value;
					this.SendPropertyChanged("SystemLogID");
					this.OnSystemLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldName", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string FieldName
		{
			get
			{
				return this._FieldName;
			}
			set
			{
				if ((this._FieldName != value))
				{
					this.OnFieldNameChanging(value);
					this.SendPropertyChanging();
					this._FieldName = value;
					this.SendPropertyChanged("FieldName");
					this.OnFieldNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string OldValue
		{
			get
			{
				return this._OldValue;
			}
			set
			{
				if ((this._OldValue != value))
				{
					this.OnOldValueChanging(value);
					this.SendPropertyChanging();
					this._OldValue = value;
					this.SendPropertyChanged("OldValue");
					this.OnOldValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewValue", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NewValue
		{
			get
			{
				return this._NewValue;
			}
			set
			{
				if ((this._NewValue != value))
				{
					this.OnNewValueChanging(value);
					this.SendPropertyChanging();
					this._NewValue = value;
					this.SendPropertyChanged("NewValue");
					this.OnNewValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SYS_License")]
	public partial class SYS_License : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _LicenseID;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private System.Nullable<int> _DayLeft;
		
		private bool _OnOFF;
		
		private string _Remark;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private string _ModifiedBy;
		
		private System.DateTime _ModifiedOn;
		
		private string _LastAction;
		
		private string _MachineIP;
		
		private string _MachineName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLicenseIDChanging(string value);
    partial void OnLicenseIDChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnDayLeftChanging(System.Nullable<int> value);
    partial void OnDayLeftChanged();
    partial void OnOnOFFChanging(bool value);
    partial void OnOnOFFChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.DateTime value);
    partial void OnModifiedOnChanged();
    partial void OnLastActionChanging(string value);
    partial void OnLastActionChanged();
    partial void OnMachineIPChanging(string value);
    partial void OnMachineIPChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    #endregion
		
		public SYS_License()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string LicenseID
		{
			get
			{
				return this._LicenseID;
			}
			set
			{
				if ((this._LicenseID != value))
				{
					this.OnLicenseIDChanging(value);
					this.SendPropertyChanging();
					this._LicenseID = value;
					this.SendPropertyChanged("LicenseID");
					this.OnLicenseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayLeft", DbType="Int")]
		public System.Nullable<int> DayLeft
		{
			get
			{
				return this._DayLeft;
			}
			set
			{
				if ((this._DayLeft != value))
				{
					this.OnDayLeftChanging(value);
					this.SendPropertyChanging();
					this._DayLeft = value;
					this.SendPropertyChanged("DayLeft");
					this.OnDayLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnOFF", DbType="Bit NOT NULL")]
		public bool OnOFF
		{
			get
			{
				return this._OnOFF;
			}
			set
			{
				if ((this._OnOFF != value))
				{
					this.OnOnOFFChanging(value);
					this.SendPropertyChanging();
					this._OnOFF = value;
					this.SendPropertyChanged("OnOFF");
					this.OnOnOFFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(MAX)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50)")]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAction", DbType="NVarChar(50)")]
		public string LastAction
		{
			get
			{
				return this._LastAction;
			}
			set
			{
				if ((this._LastAction != value))
				{
					this.OnLastActionChanging(value);
					this.SendPropertyChanging();
					this._LastAction = value;
					this.SendPropertyChanged("LastAction");
					this.OnLastActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineIP", DbType="NVarChar(50)")]
		public string MachineIP
		{
			get
			{
				return this._MachineIP;
			}
			set
			{
				if ((this._MachineIP != value))
				{
					this.OnMachineIPChanging(value);
					this.SendPropertyChanging();
					this._MachineIP = value;
					this.SendPropertyChanged("MachineIP");
					this.OnMachineIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(50)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_BackgroundTask")]
	public partial class Sys_BackgroundTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaskID;
		
		private string _TaskName;
		
		private System.DateTime _TaskDate;
		
		private string _TaskLog;
		
		private string _Remark;
		
		private string _CreatedBy;
		
		private System.DateTime _CreatedOn;
		
		private string _ModifiedBy;
		
		private System.DateTime _ModifiedOn;
		
		private string _LastAction;
		
		private bool _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaskIDChanging(string value);
    partial void OnTaskIDChanged();
    partial void OnTaskNameChanging(string value);
    partial void OnTaskNameChanged();
    partial void OnTaskDateChanging(System.DateTime value);
    partial void OnTaskDateChanged();
    partial void OnTaskLogChanging(string value);
    partial void OnTaskLogChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnModifiedOnChanging(System.DateTime value);
    partial void OnModifiedOnChanged();
    partial void OnLastActionChanging(string value);
    partial void OnLastActionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    #endregion
		
		public Sys_BackgroundTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaskName
		{
			get
			{
				return this._TaskName;
			}
			set
			{
				if ((this._TaskName != value))
				{
					this.OnTaskNameChanging(value);
					this.SendPropertyChanging();
					this._TaskName = value;
					this.SendPropertyChanged("TaskName");
					this.OnTaskNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskDate", DbType="Date NOT NULL")]
		public System.DateTime TaskDate
		{
			get
			{
				return this._TaskDate;
			}
			set
			{
				if ((this._TaskDate != value))
				{
					this.OnTaskDateChanging(value);
					this.SendPropertyChanging();
					this._TaskDate = value;
					this.SendPropertyChanged("TaskDate");
					this.OnTaskDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaskLog", DbType="NVarChar(200)")]
		public string TaskLog
		{
			get
			{
				return this._TaskLog;
			}
			set
			{
				if ((this._TaskLog != value))
				{
					this.OnTaskLogChanging(value);
					this.SendPropertyChanging();
					this._TaskLog = value;
					this.SendPropertyChanged("TaskLog");
					this.OnTaskLogChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(50)")]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAction", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastAction
		{
			get
			{
				return this._LastAction;
			}
			set
			{
				if ((this._LastAction != value))
				{
					this.OnLastActionChanging(value);
					this.SendPropertyChanging();
					this._LastAction = value;
					this.SendPropertyChanged("LastAction");
					this.OnLastActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_ProgarmAccept")]
	public partial class Sys_ProgarmAccept : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProgramAcceptID;
		
		private string _ProgramAcceptName;
		
		private string _UserID;
		
		private bool _CanView;
		
		private bool _CanNew;
		
		private bool _CanUpdate;
		
		private bool _CanDelete;
		
		private System.DateTime _CreatedOn;
		
		private string _CreatedBy;
		
		private System.DateTime _ModifiedOn;
		
		private string _ModifiedBy;
		
		private bool _Active;
		
		private string _LastAction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProgramAcceptIDChanging(string value);
    partial void OnProgramAcceptIDChanged();
    partial void OnProgramAcceptNameChanging(string value);
    partial void OnProgramAcceptNameChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnCanViewChanging(bool value);
    partial void OnCanViewChanged();
    partial void OnCanNewChanging(bool value);
    partial void OnCanNewChanged();
    partial void OnCanUpdateChanging(bool value);
    partial void OnCanUpdateChanged();
    partial void OnCanDeleteChanging(bool value);
    partial void OnCanDeleteChanged();
    partial void OnCreatedOnChanging(System.DateTime value);
    partial void OnCreatedOnChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnModifiedOnChanging(System.DateTime value);
    partial void OnModifiedOnChanged();
    partial void OnModifiedByChanging(string value);
    partial void OnModifiedByChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnLastActionChanging(string value);
    partial void OnLastActionChanged();
    #endregion
		
		public Sys_ProgarmAccept()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramAcceptID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProgramAcceptID
		{
			get
			{
				return this._ProgramAcceptID;
			}
			set
			{
				if ((this._ProgramAcceptID != value))
				{
					this.OnProgramAcceptIDChanging(value);
					this.SendPropertyChanging();
					this._ProgramAcceptID = value;
					this.SendPropertyChanged("ProgramAcceptID");
					this.OnProgramAcceptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProgramAcceptName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProgramAcceptName
		{
			get
			{
				return this._ProgramAcceptName;
			}
			set
			{
				if ((this._ProgramAcceptName != value))
				{
					this.OnProgramAcceptNameChanging(value);
					this.SendPropertyChanging();
					this._ProgramAcceptName = value;
					this.SendPropertyChanged("ProgramAcceptName");
					this.OnProgramAcceptNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanView", DbType="Bit NOT NULL")]
		public bool CanView
		{
			get
			{
				return this._CanView;
			}
			set
			{
				if ((this._CanView != value))
				{
					this.OnCanViewChanging(value);
					this.SendPropertyChanging();
					this._CanView = value;
					this.SendPropertyChanged("CanView");
					this.OnCanViewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanNew", DbType="Bit NOT NULL")]
		public bool CanNew
		{
			get
			{
				return this._CanNew;
			}
			set
			{
				if ((this._CanNew != value))
				{
					this.OnCanNewChanging(value);
					this.SendPropertyChanging();
					this._CanNew = value;
					this.SendPropertyChanged("CanNew");
					this.OnCanNewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanUpdate", DbType="Bit NOT NULL")]
		public bool CanUpdate
		{
			get
			{
				return this._CanUpdate;
			}
			set
			{
				if ((this._CanUpdate != value))
				{
					this.OnCanUpdateChanging(value);
					this.SendPropertyChanging();
					this._CanUpdate = value;
					this.SendPropertyChanged("CanUpdate");
					this.OnCanUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanDelete", DbType="Bit NOT NULL")]
		public bool CanDelete
		{
			get
			{
				return this._CanDelete;
			}
			set
			{
				if ((this._CanDelete != value))
				{
					this.OnCanDeleteChanging(value);
					this.SendPropertyChanging();
					this._CanDelete = value;
					this.SendPropertyChanged("CanDelete");
					this.OnCanDeleteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOn", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedOn
		{
			get
			{
				return this._CreatedOn;
			}
			set
			{
				if ((this._CreatedOn != value))
				{
					this.OnCreatedOnChanging(value);
					this.SendPropertyChanging();
					this._CreatedOn = value;
					this.SendPropertyChanged("CreatedOn");
					this.OnCreatedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedOn", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedOn
		{
			get
			{
				return this._ModifiedOn;
			}
			set
			{
				if ((this._ModifiedOn != value))
				{
					this.OnModifiedOnChanging(value);
					this.SendPropertyChanging();
					this._ModifiedOn = value;
					this.SendPropertyChanged("ModifiedOn");
					this.OnModifiedOnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
		public bool Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAction", DbType="NVarChar(50)")]
		public string LastAction
		{
			get
			{
				return this._LastAction;
			}
			set
			{
				if ((this._LastAction != value))
				{
					this.OnLastActionChanging(value);
					this.SendPropertyChanging();
					this._LastAction = value;
					this.SendPropertyChanged("LastAction");
					this.OnLastActionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sys_RunningNo")]
	public partial class Sys_RunningNo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RunningNoID;
		
		private string _RunningNoCode;
		
		private int _RunningNoStart;
		
		private int _RunningSequence;
		
		private int _RunningSequneceLength;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRunningNoIDChanging(string value);
    partial void OnRunningNoIDChanged();
    partial void OnRunningNoCodeChanging(string value);
    partial void OnRunningNoCodeChanged();
    partial void OnRunningNoStartChanging(int value);
    partial void OnRunningNoStartChanged();
    partial void OnRunningSequenceChanging(int value);
    partial void OnRunningSequenceChanged();
    partial void OnRunningSequneceLengthChanging(int value);
    partial void OnRunningSequneceLengthChanged();
    #endregion
		
		public Sys_RunningNo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningNoID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RunningNoID
		{
			get
			{
				return this._RunningNoID;
			}
			set
			{
				if ((this._RunningNoID != value))
				{
					this.OnRunningNoIDChanging(value);
					this.SendPropertyChanging();
					this._RunningNoID = value;
					this.SendPropertyChanged("RunningNoID");
					this.OnRunningNoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningNoCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string RunningNoCode
		{
			get
			{
				return this._RunningNoCode;
			}
			set
			{
				if ((this._RunningNoCode != value))
				{
					this.OnRunningNoCodeChanging(value);
					this.SendPropertyChanging();
					this._RunningNoCode = value;
					this.SendPropertyChanged("RunningNoCode");
					this.OnRunningNoCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningNoStart", DbType="Int NOT NULL")]
		public int RunningNoStart
		{
			get
			{
				return this._RunningNoStart;
			}
			set
			{
				if ((this._RunningNoStart != value))
				{
					this.OnRunningNoStartChanging(value);
					this.SendPropertyChanging();
					this._RunningNoStart = value;
					this.SendPropertyChanged("RunningNoStart");
					this.OnRunningNoStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningSequence", DbType="Int NOT NULL")]
		public int RunningSequence
		{
			get
			{
				return this._RunningSequence;
			}
			set
			{
				if ((this._RunningSequence != value))
				{
					this.OnRunningSequenceChanging(value);
					this.SendPropertyChanging();
					this._RunningSequence = value;
					this.SendPropertyChanged("RunningSequence");
					this.OnRunningSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunningSequneceLength", DbType="Int NOT NULL")]
		public int RunningSequneceLength
		{
			get
			{
				return this._RunningSequneceLength;
			}
			set
			{
				if ((this._RunningSequneceLength != value))
				{
					this.OnRunningSequneceLengthChanging(value);
					this.SendPropertyChanging();
					this._RunningSequneceLength = value;
					this.SendPropertyChanged("RunningSequneceLength");
					this.OnRunningSequneceLengthChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
